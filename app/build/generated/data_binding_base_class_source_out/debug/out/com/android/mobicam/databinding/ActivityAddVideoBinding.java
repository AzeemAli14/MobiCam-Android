// Generated by view binder compiler. Do not edit!
package com.android.mobicam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.mobicam.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddVideoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final FloatingActionButton pickVideoFab;

  @NonNull
  public final EditText titleEt;

  @NonNull
  public final Button uploadVideoBtn;

  @NonNull
  public final VideoView videoView;

  private ActivityAddVideoBinding(@NonNull RelativeLayout rootView,
      @NonNull FloatingActionButton pickVideoFab, @NonNull EditText titleEt,
      @NonNull Button uploadVideoBtn, @NonNull VideoView videoView) {
    this.rootView = rootView;
    this.pickVideoFab = pickVideoFab;
    this.titleEt = titleEt;
    this.uploadVideoBtn = uploadVideoBtn;
    this.videoView = videoView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddVideoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddVideoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_video, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddVideoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pickVideoFab;
      FloatingActionButton pickVideoFab = ViewBindings.findChildViewById(rootView, id);
      if (pickVideoFab == null) {
        break missingId;
      }

      id = R.id.titleEt;
      EditText titleEt = ViewBindings.findChildViewById(rootView, id);
      if (titleEt == null) {
        break missingId;
      }

      id = R.id.uploadVideoBtn;
      Button uploadVideoBtn = ViewBindings.findChildViewById(rootView, id);
      if (uploadVideoBtn == null) {
        break missingId;
      }

      id = R.id.videoView;
      VideoView videoView = ViewBindings.findChildViewById(rootView, id);
      if (videoView == null) {
        break missingId;
      }

      return new ActivityAddVideoBinding((RelativeLayout) rootView, pickVideoFab, titleEt,
          uploadVideoBtn, videoView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
